var app = require('../index'),  url = app.listen(),  should = require('should'),  request = require('supertest'),  moment = require('moment');describe('Tariff', function () {  "use strict";  var _token;  var tokenMaster;  var _userId;  var credentials = {    "email":"marny",    "password": "karel"  };  describe('Login to application', function () {    it('should return token and user ID', function (done) {      request(url)        .post('/v1/auth/zoomsphere')        .send(credentials)        .expect("Content-type", /application\/json/)        .expect(200)        .end(function (err, res) {          if (err) {            throw err;          }          res.body.data.apikey.should.be.String();          res.body.data.userId.should.be.Number();          _token = res.body.data.apikey;          done()        })    })  });  describe('Set tariff for master user', function () {    var userId = 3;    it('Should update user tariff to expired', function (done) {      var credentials = {        "date":"2014-02-21 14:37:57"      };      request(url)        .post('/v1/users/' + userId + '/tariff')        .send(credentials)        .set('apikey', _token)        .expect("Content-type", /application\/json/)        .expect(200)        .end(function (err, res) {          if (err) {            throw err;          }          done()        })    })  });  describe('Login to application', function () {    var params = {      "email": "jakub@zoomsphere.com",      "password": "karel"    };    it('should return token and user ID', function (done) {      request(url)        .post('/v1/auth/zoomsphere')        .send(params)        .expect("Content-type", /application\/json/)        .expect(200)        .end(function (err, res) {          if (err) {            throw err;          }          tokenMaster = res.body.data.apikey;          _userId = res.body.data.userId;          done()        })    })  });  describe('Check if tariff for master user is set correctly', function () {    it('should return user', function (done) {      request(url)        .get('/v1/users/me')        .set('apikey', tokenMaster)        .set('cache', false)        .expect("Content-type", /application\/json/)        .expect(200)        .end(function (err, res) {          if (err) {            throw err;          }          var user = res.body.data.user;          user.tariff.should.be.equal('expired');          done()        })    })  });  describe('Set tariff for master user', function () {    var userId = 3;    it('Should update user tariff to profi', function (done) {      var credentials = {        "date":"2018-02-21 14:37:57"      };      request(url)        .post('/v1/users/' + userId + '/tariff')        .send(credentials)        .set('apikey', _token)        .expect("Content-type", /application\/json/)        .expect(200)        .end(function (err, res) {          if (err) {            throw err;          }          done()        })    })  });  describe('Check if tariff for master user is set correctly', function () {    it('should return user', function (done) {      request(url)        .get('/v1/users/me')        .set('apikey', tokenMaster)        .set('cache', false)        .expect("Content-type", /application\/json/)        .expect(200)        .end(function (err, res) {          if (err) {            throw err;          }          var user = res.body.data.user;          user.tariff.should.be.equal('profi');          done()        })    })  });  describe('Set tariff for slave user', function () {    var userId = 42;    it('Should be failed', function (done) {      var credentials = {        "date":"2016-02-21 14:37:57"      };      request(url)        .post('/v1/users/' + userId + '/tariff')        .send(credentials)        .set('apikey', _token)        .expect("Content-type", /application\/json/)        .expect(401)        .end(function (err, res) {          if (err) {            throw err;          }          done()        })    })  });});