var app = require('../index'),  url = app.listen(),  should = require('should'),  request = require('supertest');describe('ZOOMSPHERE User publisher labels', function () {  "use strict";  var _token;  var _userId;  var _workspaceId;  var credentials = {    "email": "tom@zoomsphere.com",    "password": "karel"  };  describe('Sign up user', function () {    it('should return token', function (done) {      request(url)        .post('/v1/auth/zoomsphere')        .send(credentials)        .expect("Content-type", /application\/json/)        .expect(200)        .end(function (err, res) {          if (err) {            throw err;          }          res.body.data.apikey.should.be.String();          res.body.data.userId.should.be.Number();          _token = res.body.data.apikey;          _userId = res.body.data.userId;          done()        })    })  });  describe('GET USER', function () {    it('should return default settings', function (done) {      request(url)        .get('/v1/users/' + _userId + '/advancedSettings')        .set('cache', 'false')        .set('apikey', _token)        .expect("Content-type", /application\/json/)        .expect(200)        .end(function (err, res) {          if (err) {            throw err;          }          var ws = res.body.data.workspaces[0];          ws.id.should.be.equal(0);          _workspaceId = ws.id;          done()        })    })  });  describe('List publisher labels', function () {    it('should return list publisher labels', function (done) {      request(url)        .get('/v1/users/' + _userId + '/workspaces/' + _workspaceId + '/publisher-labels')        .set('cache', 'false')        .set('apikey', _token)        .expect("Content-type", /application\/json/)        .expect(200)        .end(function (err, res) {          if (err) {            throw err;          }          var listPublisherLabels = res.body.data.labels;          listPublisherLabels[0].should.have.keys('id', 'name', 'color');          listPublisherLabels[0].id.should.be.Number();          listPublisherLabels[0].name.should.be.String();          listPublisherLabels[0].color.should.be.String();          done()        })    })  });  describe(' List customer  statuses', function () {    it('should return list customer statuses', function (done) {      request(url)        .get('/v1/users/' + _userId + '/workspaces/' + _workspaceId + '/customer-care-statuses')        .set('cache', 'false')        .set('apikey', _token)        .expect("Content-type", /application\/json/)        .expect(200)        .end(function (err, res) {          if (err) {            throw err;          }          var listCustomerStatuses = res.body.data.statuses;          listCustomerStatuses[0].should.have.keys('id', 'name', 'color', 'icon', 'default', 'sort');          listCustomerStatuses[0].id.should.be.Number();          listCustomerStatuses[0].name.should.be.String();          listCustomerStatuses[0].color.should.be.String();          done()        })    })  });  describe('List Customer care labels in workspace', function () {    it('should return customer-care-labels', function (done) {      request(url)        .get('/v1/users/' + _userId + '/workspaces/' + _workspaceId + '/customer-care-labels')        .set('cache', 'false')        .set('apikey', _token)        .expect("Content-type", /application\/json/)        .expect(200)        .end(function (err, res) {          if (err) {            throw err;          }          var listAllCareLabels = res.body.data.labels;          listAllCareLabels[0].should.have.keys('id', 'name', 'color');          listAllCareLabels[0].id.should.be.Number();          listAllCareLabels[0].name.should.be.String();          listAllCareLabels[0].color.should.be.String();          done()        })    })  });  describe('User publisher labels', function () {    it('should return user publisher labels', function (done) {      request(url)        .get('/v1/users/' + _userId + '/publisher-labels')        .set('cache', 'false')        .set('apikey', _token)        .expect("Content-type", /application\/json/)        .expect(200)        .end(function (err, res) {          if (err) {            throw err;          }          var userPublisherLabs =  res.body.data.labels;          userPublisherLabs[0].should.have.keys('id', 'name', 'color', 'workspace_id');          userPublisherLabs[0].id.should.be.Number();          userPublisherLabs[0].color.should.be.String();          userPublisherLabs[0].name.should.be.String();          userPublisherLabs[0].workspace_id.should.be.Number();          done()        })    })  });  describe('Customer-care-labels', function () {    it('should return customer-care-labels', function (done) {      request(url)        .get('/v1/users/' + _userId + '/customer-care-labels')        .set('cache', 'false')        .set('apikey', _token)        .expect("Content-type", /application\/json/)        .expect(200)        .end(function (err, res) {          if (err) {            throw err;          }          var listAllCareLabels = res.body.data.labels;          listAllCareLabels[0].should.have.keys('id', 'name', 'color', 'workspace_id');          listAllCareLabels[0].id.should.be.Number();          listAllCareLabels[0].name.should.be.String();          listAllCareLabels[0].color.should.be.String();          listAllCareLabels[0].workspace_id.should.be.Number();          done()        })    })  });});